// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\gilsp\go\src\aqua-farm-manager\pkg\nsq\nsq.go

// Package mock_nsq is a generated GoMock package.
package mock_nsq

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNsqMethod is a mock of NsqMethod interface.
type MockNsqMethod struct {
	ctrl     *gomock.Controller
	recorder *MockNsqMethodMockRecorder
}

// MockNsqMethodMockRecorder is the mock recorder for MockNsqMethod.
type MockNsqMethodMockRecorder struct {
	mock *MockNsqMethod
}

// NewMockNsqMethod creates a new mock instance.
func NewMockNsqMethod(ctrl *gomock.Controller) *MockNsqMethod {
	mock := &MockNsqMethod{ctrl: ctrl}
	mock.recorder = &MockNsqMethodMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNsqMethod) EXPECT() *MockNsqMethodMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockNsqMethod) Publish(topic string, data interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", topic, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Publish indicates an expected call of Publish.
func (mr *MockNsqMethodMockRecorder) Publish(topic, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockNsqMethod)(nil).Publish), topic, data)
}
